<snippet>
	<content><![CDATA[
#include<bits/stdc++.h>
using namespace std;
using ll  = long long;
using ull = unsigned long long;


#define fi first
#define se second
#define pb push_back
#define pii pair<int,int>
#define sz(v)  (int)v.size()
#define all(v) v.begin(),v.end()
#define mem(a,v) memset(a,(v),sizeof(a))
#define rep(i,a,b) for(int i=a; i<=b; i++)
#define rep_(i,a,b) for(int i=a; i>=b; i--)
#define de(a) cerr<<"DEBUG:"<<(a)<<'\n'
#define de2(a,b) cerr<<"DEBUG:"<<(a)<<' '<<(b)<<'\n'
#define Cout(a)  cout<<fixed<<setprecision((a))
#define endl '\n'
#define eps 1e-6

const int inf = INT_MAX;
const ll llinf = LLONG_MAX;
ll gcd(ll a,ll b) {return b==0?a:gcd(b,a%b);}
ll qpow(ll a,ll b,ll p){ll s=1;while(b){if(b&1)s=(s*a)%p;b>>=1;a=(a*a)%p;}return s;}

const int N = 2e5+10;
// #define int ll
void solve(){
    ${1}
}
signed main(){
    ios::sync_with_stdio(false),cin.tie(nullptr),cout.tie(nullptr);
    // freopen(".in","r",stdin);
    // freopen(".out","w",stdout);
    int T = 1;
    // cin >> T;
    rep(_,1,T){
        // cout<<"Case #"<<_<<": ";
        solve();
    }
    return 0;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>cp</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
